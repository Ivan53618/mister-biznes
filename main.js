// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –≥—Ä–∞–≤—Ü—è
document.addEventListener('DOMContentLoaded', function() {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–∞–Ω—ñ –≥—Ä–∞–≤—Ü—è
    if (!localStorage.getItem('gamezone_username')) {
        const username = prompt("–ü—Ä–∏–≤—ñ—Ç! –Ø–∫ –¥–æ —Ç–µ–±–µ –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—è?", "–ì—Ä–∞–≤–µ—Ü—å");
        if (username) {
            localStorage.setItem('gamezone_username', username.trim());
        } else {
            localStorage.setItem('gamezone_username', "–ì—Ä–∞–≤–µ—Ü—å");
        }
    }

    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —ñ–º'—è —Ç–∞ –∞–≤–∞—Ç–∞—Ä
    document.getElementById('username').textContent = localStorage.getItem('gamezone_username');
    
    // –ì–µ–Ω–µ—Ä—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –∞–≤–∞—Ç–∞—Ä
    const avatars = ['üë¶', 'üëß', 'üßë', 'üë©', 'ü§ì', 'üéÆ', 'üïπÔ∏è', 'üëæ'];
    const randomAvatar = avatars[Math.floor(Math.random() * avatars.length)];
    document.getElementById('user-avatar').textContent = randomAvatar;
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ —Ä–µ–π—Ç–∏–Ω–≥—É
    if (document.querySelector('.leaderboard')) {
        loadLeaderboard('space-race');
        
        document.querySelectorAll('.tab-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                document.querySelectorAll('.tab-btn').forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                loadLeaderboard(this.dataset.game);
            });
        });
        
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –æ—Å–æ–±–∏—Å—Ç—ñ —Ä–µ–∫–æ—Ä–¥–∏
        loadPersonalBests();
    }
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ —ñ–≥–æ—Ä
    if (document.querySelector('.games-grid')) {
        loadGameStats();
    }

    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —ñ–º'—è —Ç–∞ –∞–≤–∞—Ç–∞—Ä
document.getElementById('username').textContent = localStorage.getItem('gamezone_username') || "–ì—Ä–∞–≤–µ—Ü—å";
const savedAvatar = localStorage.getItem('gamezone_avatar');
if (savedAvatar) {
    document.getElementById('user-avatar').textContent = savedAvatar;
} else {
    const avatars = ['üë¶', 'üëß', 'üßë', 'üë©', 'ü§ì', 'üéÆ', 'üïπÔ∏è', 'üëæ'];
    const randomAvatar = avatars[Math.floor(Math.random() * avatars.length)];
    document.getElementById('user-avatar').textContent = randomAvatar;
    localStorage.setItem('gamezone_avatar', randomAvatar);
}

});

function loadLeaderboard(gameType) {
    const leaderboardBody = document.getElementById('leaderboard-body');
    leaderboardBody.innerHTML = '';
    
    // –û—Ç—Ä–∏–º—É—î–º–æ —Ä–µ–π—Ç–∏–Ω–≥ –∑ localStorage
    let ratings = JSON.parse(localStorage.getItem(`gamezone_${gameType}_ratings`)) || [];
    
    // –°–æ—Ä—Ç—É—î–º–æ –∑–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º
    ratings.sort((a, b) => b.score - a.score);
    
    // –î–æ–¥–∞—î–º–æ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ
    ratings.slice(0, 10).forEach((item, index) => {
        const row = document.createElement('div');
        row.className = 'leaderboard-item';
        
        row.innerHTML = `
            <span>${index + 1}</span>
            <span>${item.name}</span>
            <span>${item.score}</span>
            <span>${new Date(item.date).toLocaleDateString()}</span>
        `;
        
        leaderboardBody.appendChild(row);
    });
    
    // –Ø–∫—â–æ –Ω–µ–º–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    if (ratings.length === 0) {
        const noResults = document.createElement('div');
        noResults.className = 'leaderboard-item';
        noResults.innerHTML = '<span colspan="4" style="grid-column: 1 / -1; text-align: center;">–©–µ –Ω–µ–º–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤. –ë—É–¥—å –ø–µ—Ä—à–∏–º!</span>';
        leaderboardBody.appendChild(noResults);
    }
}

function loadPersonalBests() {
    const username = localStorage.getItem('gamezone_username');
    
    // –ö–æ—Å–º—ñ—á–Ω—ñ –ø–µ—Ä–µ–≥–æ–Ω–∏
    let spaceRatings = JSON.parse(localStorage.getItem('gamezone_space-race_ratings')) || [];
    let userSpaceBest = spaceRatings.filter(r => r.name === username).sort((a, b) => b.score - a.score)[0];
    document.getElementById('user-space').textContent = userSpaceBest ? userSpaceBest.score : '0';
    
    // –ï–º–æ–¥–∑—ñ-–ø–∞–∑–ª
    let emojiRatings = JSON.parse(localStorage.getItem('gamezone_emoji-match_ratings')) || [];
    let userEmojiBest = emojiRatings.filter(r => r.name === username).sort((a, b) => b.score - a.score)[0];
    document.getElementById('user-emoji').textContent = userEmojiBest ? userEmojiBest.score : '0';
}

function loadGameStats() {
    const username = localStorage.getItem('gamezone_username');
    
    // –ö–æ—Å–º—ñ—á–Ω—ñ –ø–µ—Ä–µ–≥–æ–Ω–∏
    let spaceRatings = JSON.parse(localStorage.getItem('gamezone_space-race_ratings')) || [];
    let spaceTop = spaceRatings.sort((a, b) => b.score - a.score)[0];
    document.getElementById('space-top').textContent = spaceTop ? spaceTop.score : '0';
    
    let userSpaceBest = spaceRatings.filter(r => r.name === username).sort((a, b) => b.score - a.score)[0];
    document.getElementById('space-user').textContent = userSpaceBest ? userSpaceBest.score : '0';
    
    // –ï–º–æ–¥–∑—ñ-–ø–∞–∑–ª
    let emojiRatings = JSON.parse(localStorage.getItem('gamezone_emoji-match_ratings')) || [];
    let emojiTop = emojiRatings.sort((a, b) => b.score - a.score)[0];
    document.getElementById('emoji-top').textContent = emojiTop ? emojiTop.score : '0';
    
    let userEmojiBest = emojiRatings.filter(r => r.name === username).sort((a, b) => b.score - a.score)[0];
    document.getElementById('emoji-user').textContent = userEmojiBest ? userEmojiBest.score : '0';
    // –í–≥–∞–¥–∞–π —á–∏—Å–ª–æ
    let guessRatings = JSON.parse(localStorage.getItem('gamezone_guess-number_ratings')) || [];
    let guessTop = guessRatings.sort((a, b) => b.score - a.score)[0];
    document.getElementById('guess-top').textContent = guessTop ? guessTop.score : '0';
    
    let userGuessBest = guessRatings.filter(r => r.name === username).sort((a, b) => b.score - a.score)[0];
    document.getElementById('guess-user').textContent = userGuessBest ? userGuessBest.score : '0';
}

function saveGameResult(gameType, score) {
    const username = localStorage.getItem('gamezone_username') || "–ì—Ä–∞–≤–µ—Ü—å";
    let ratings = JSON.parse(localStorage.getItem(`gamezone_${gameType}_ratings`)) || [];
    
    ratings.push({
        name: username,
        score: score,
        date: new Date().toISOString()
    });
    
    localStorage.setItem(`gamezone_${gameType}_ratings`, JSON.stringify(ratings));
    
    // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö
    if (document.querySelector('.leaderboard')) {
        loadLeaderboard(gameType);
        loadPersonalBests();
    }
    
    if (document.querySelector('.games-grid')) {
        loadGameStats();
    }
}